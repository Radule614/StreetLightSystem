using Microsoft.EntityFrameworkCore;
using Pole.API.Domain.Entities;

namespace Pole.API.Infrastructure.Data;

/// <summary>
/// DbContext class used for the database configuration.
/// </summary>
public class PoleContext : DbContext
{
    public PoleContext() { }
    public PoleContext(DbContextOptions<PoleContext> options)
        : base(options) { }

    /// <inheritdoc />
    protected override void OnModelCreating(ModelBuilder builder)
    {
        double[] data =
        {
            45.239456,19.844039,45.241598,19.842844,45.241685,19.842794,45.24382,19.841606,45.243923,19.841551,45.246577,19.840077,45.24793,19.839324,45.248029,19.839267,45.24885,19.838813,45.250398,19.837952,45.251906,19.837111,45.251974,19.837076,45.255173,19.835302,45.255237,19.835267,45.256841,19.83438,45.260619,19.83229,45.260705,19.832238,45.264062,19.830391,45.264108,19.830507,
            45.249231,19.824663,45.249056,19.828222,45.249101,19.829498,45.249136,19.830263,45.249232,19.831279,45.249313,19.831605,45.249653,19.832659,45.24969,19.832757,45.251839,19.83698,45.251873,19.837049,45.251906,19.837111,45.252557,19.83855,45.254112,19.842229,45.254028,19.842595,45.253504,19.843419,45.253641,19.847313,45.253668,19.847611,45.253677,19.847712,45.253731,19.848318,45.253924,19.850402,45.25415,19.852582,45.254294,19.853981,45.254277,19.854024,
            45.249565,19.832723,45.248861,19.833332,45.24813,19.834775,45.24774,19.836446,45.247895,19.839175,45.24793,19.839324,45.248725,19.842668,45.248748,19.84276,45.249456,19.845268,45.25022,19.847781,45.250242,19.847854,45.25081,19.849558,45.251244,19.850941,45.25201,19.854017,45.252288,19.85538,
            45.239564,19.824131,45.239813,19.82529,45.239848,19.825429,45.240389,19.827547,45.241246,19.830764,45.241306,19.83103,45.241337,19.831162,45.24144,19.831571,45.242563,19.836624,45.243316,19.8396,45.243785,19.841464,45.24382,19.841606,45.244093,19.842664,45.24497,19.845731,45.245713,19.847313,45.245788,19.847629,45.247048,19.848773,45.247206,19.848923,45.247681,19.849559,45.24875,19.852514,45.249637,19.855342,
            45.25578,19.812033,45.255892,19.812358,45.256498,19.814118,45.257121,19.815912,45.257708,19.817615,45.25834,19.819481,45.258818,19.821293,45.258966,19.822841,45.258978,19.823017,45.259036,19.823595,45.259101,19.824144,45.259894,19.829646,45.259934,19.829791,45.260568,19.832106,45.260619,19.83229,45.261088,19.833991,45.261113,19.834081,45.261578,19.835739,45.262472,19.839032,45.262558,19.839335,45.26267,19.839606,
            45.258724,19.823127,45.254122,19.824272,45.254067,19.824275,45.25407,19.824412,45.254376,19.827163,45.254523,19.828549,45.254717,19.830592,45.254775,19.831304,45.254799,19.831646,45.254958,19.833427,45.255102,19.834907,
            45.254348,19.842523,45.255713,19.841647,45.256505,19.841665,45.257098,19.841659,45.258027,19.842038,45.258993,19.842416,45.260078,19.842922,45.260305,19.843071,45.260387,19.843095,45.261055,19.843199,45.261895,19.843467,45.262445,19.843557,45.263532,19.843717,45.264502,19.843861,45.265383,19.843933,45.266259,19.843624,45.267144,19.843295,45.267415,19.843196,45.267497,19.843198,
            45.255515,19.811736,45.252784,19.813601,45.252697,19.81366,45.250778,19.814969,45.248683,19.816445,45.248584,19.816512,45.247331,19.81735,45.247152,19.817471,45.245816,19.818391,45.245671,19.81849,45.244194,19.819498,45.243589,19.819911,45.243468,19.819994,45.24265,19.820554,45.241102,19.821615,45.240215,19.82222,45.239884,19.822362,
        };
        var poles = new List<PoleEntity>();

        for (var i = 0; i < data.Length; i += 2)
        {
            var pole = new PoleEntity()
            {
                Id = Guid.NewGuid(),
                Longitude = data[i + 1],
                Latitude = data[i],
                Status = PoleStatus.Working
            };
            if (i % 14 == 0)
                pole.Status = PoleStatus.Broken;
            poles.Add(pole);
        }

        builder
            .Entity<PoleEntity>()
            .HasData(poles);

        base.OnModelCreating(builder);
    }
}
